{"version":3,"sources":["../../../src/researches/findKeywordFormsInString.js"],"names":["findWordFormsInString","keywordForms","text","locale","wordNumber","length","foundWords","Array","i","found","count","foundNumberOfWords","result","countWordMatches","percentWordMatches","Math","round","findTopicFormsInString","topicForms","useSynonyms","keyphraseForms","keyphraseOrSynonym","synonymsForms","resultsSynonyms","synonym","foundSynonyms","map","resultSynonyms","bestSynonymIndex","indexOf","max"],"mappings":";;;;;;;AAAA;;;;AACA;;;;;;AAGA;;;;;;;;;;AAUA,IAAMA,wBAAwB,SAAxBA,qBAAwB,CAAUC,YAAV,EAAwBC,IAAxB,EAA8BC,MAA9B,EAAuC;AACpE,KAAMC,aAAaH,aAAaI,MAAhC;AACA,KAAMC,aAAaC,MAAOH,UAAP,CAAnB;;AAEA,MAAM,IAAII,IAAI,CAAd,EAAiBA,IAAIJ,UAArB,EAAiCI,GAAjC,EAAuC;AACtC,MAAMC,QAAQ,kCAAoBP,IAApB,EAA0BD,aAAcO,CAAd,CAA1B,EAA6CL,MAA7C,EAAsDO,KAAtD,GAA8D,CAA5E;AACAJ,aAAYE,CAAZ,IAAkBC,QAAQ,CAAR,GAAY,CAA9B;AACA;AACD,KAAME,qBAAqB,mBAAKL,UAAL,CAA3B;AACA,KAAMM,SAAS;AACdC,oBAAkBF,kBADJ;AAEdG,sBAAoB;AAFN,EAAf;;AAKA,KAAKV,aAAa,CAAlB,EAAsB;AACrBQ,SAAOE,kBAAP,GAA4BC,KAAKC,KAAL,CAAYL,qBAAqBP,UAArB,GAAkC,GAA9C,CAA5B;AACA;;AAED,QAAOQ,MAAP;AACA,CAnBD;;AAqBA;;;;;;;;;;;;;;;;;;;AAmBA,IAAMK,yBAAyB,SAAzBA,sBAAyB,CAAUC,UAAV,EAAsBhB,IAAtB,EAA4BiB,WAA5B,EAAyChB,MAAzC,EAAkD;AAChF;AACA,KAAIS,SAASZ,sBAAuBkB,WAAWE,cAAlC,EAAkDlB,IAAlD,EAAwDC,MAAxD,CAAb;AACAS,QAAOS,kBAAP,GAA4B,WAA5B;;AAEA;AACA,KAAKT,OAAOE,kBAAP,KAA8B,GAA9B,IAAqCK,gBAAgB,KAArD,IAA8D,uBAASD,WAAWI,aAApB,CAAnE,EAAyG;AACxG,SAAOV,MAAP;AACA;;AAED;AACA,KAAMW,kBAAkB,EAAxB;AACA,MAAM,IAAIf,IAAI,CAAd,EAAiBA,IAAIU,WAAWI,aAAX,CAAyBjB,MAA9C,EAAsDG,GAAtD,EAA4D;AAC3D,MAAMgB,UAAUN,WAAWI,aAAX,CAA0Bd,CAA1B,CAAhB;AACAe,kBAAiBf,CAAjB,IAAuBR,sBAAuBwB,OAAvB,EAAgCtB,IAAhC,EAAsCC,MAAtC,CAAvB;AACA;;AAED;AACA,KAAMsB,gBAAgBF,gBAAgBG,GAAhB,CAAqB;AAAA,SAAkBC,eAAeb,kBAAjC;AAAA,EAArB,CAAtB;AACA,KAAMc,mBAAmBH,cAAcI,OAAd,CAAuBd,KAAKe,GAAL,gCAAaL,aAAb,EAAvB,CAAzB;;AAEA;AACA,KAAKb,OAAOE,kBAAP,IAA6BS,gBAAiBK,gBAAjB,EAAoCd,kBAAtE,EAA2F;AAC1F,SAAOF,MAAP;AACA;;AAED;AACAA,UAASW,gBAAiBK,gBAAjB,CAAT;AACAhB,QAAOS,kBAAP,GAA4B,SAA5B;;AAEA,QAAOT,MAAP;AACA,CA/BD;;QAkCCZ,qB,GAAAA,qB;QACAiB,sB,GAAAA,sB","file":"findKeywordFormsInString.js","sourcesContent":["import matchTextWithArray from \"../stringProcessing/matchTextWithArray.js\";\nimport { sum } from \"lodash-es\";\nimport { isEmpty } from \"lodash-es\";\n\n/**\n * Matches forms of words in the keyphrase against a given text.\n *\n * @param {Array} keywordForms The array with word forms of all (content) words from the keyphrase in a shape\n *                             [ [ form1, form2, ... ], [ form1, form2, ... ] ]\n * @param {string} text The string to match the word forms against.\n * @param {string} locale The locale of the paper.\n *\n * @returns {Object} The number and the percentage of the keyphrase words that were matched in the text by at least one form.\n */\nconst findWordFormsInString = function( keywordForms, text, locale ) {\n\tconst wordNumber = keywordForms.length;\n\tconst foundWords = Array( wordNumber );\n\n\tfor ( let i = 0; i < wordNumber; i++ ) {\n\t\tconst found = matchTextWithArray( text, keywordForms[ i ], locale ).count > 0;\n\t\tfoundWords[ i ] = found ? 1 : 0;\n\t}\n\tconst foundNumberOfWords = sum( foundWords );\n\tconst result = {\n\t\tcountWordMatches: foundNumberOfWords,\n\t\tpercentWordMatches: 0,\n\t};\n\n\tif ( wordNumber > 0 ) {\n\t\tresult.percentWordMatches = Math.round( foundNumberOfWords / wordNumber * 100 );\n\t}\n\n\treturn result;\n};\n\n/**\n * Matches forms of words in the keyphrase and in the synonyms against a given text.\n *\n * @param {Object} topicForms The object with word forms of all (content) words from the keyphrase and eventually synonyms,\n * comes in a shape {\n *                     keyphraseForms: [[ form1, form2, ... ], [ form1, form2, ... ]],\n *                     synonymsForms: [\n *                          [[ form1, form2, ... ], [ form1, form2, ... ]],\n *                          [[ form1, form2, ... ], [ form1, form2, ... ]],\n *                          [[ form1, form2, ... ], [ form1, form2, ... ]],\n *                     ],\n *                  }\n * @param {string} text The string to match the word forms against.\n * @param {boolean} useSynonyms Whether to use synonyms as if it was keyphrase or not (depends on the assessment).\n * @param {string} locale The locale of the paper.\n *\n * @returns {Object} The number and the percentage fo the keyphrase words or synonyms that were matched in the text by at least one form,\n * and whether the keyphrase or a synonym was matched.\n */\nconst findTopicFormsInString = function( topicForms, text, useSynonyms, locale ) {\n\t// First check if the keyword is found in the text\n\tlet result = findWordFormsInString( topicForms.keyphraseForms, text, locale );\n\tresult.keyphraseOrSynonym = \"keyphrase\";\n\n\t// If a full match found with the keyword or if no synonyms are supplied or supposed to be used, return the keyphrase search result.\n\tif ( result.percentWordMatches === 100 || useSynonyms === false || isEmpty( topicForms.synonymsForms ) ) {\n\t\treturn result;\n\t}\n\n\t// Collect results of matching of every synonym with the text.\n\tconst resultsSynonyms = [];\n\tfor ( let i = 0; i < topicForms.synonymsForms.length; i++ ) {\n\t\tconst synonym = topicForms.synonymsForms[ i ];\n\t\tresultsSynonyms[ i ] = findWordFormsInString( synonym, text, locale );\n\t}\n\n\t// Find which synonym occurred most fully.\n\tconst foundSynonyms = resultsSynonyms.map( resultSynonyms => resultSynonyms.percentWordMatches );\n\tconst bestSynonymIndex = foundSynonyms.indexOf( Math.max( ...foundSynonyms ) );\n\n\t// If the best synonym showed lower results than the keyword, return the keyword.\n\tif ( result.percentWordMatches >= resultsSynonyms[ bestSynonymIndex ].percentWordMatches ) {\n\t\treturn result;\n\t}\n\n\t// If the best synonym showed better results than the keyword, return the synonym.\n\tresult = resultsSynonyms[ bestSynonymIndex ];\n\tresult.keyphraseOrSynonym = \"synonym\";\n\n\treturn result;\n};\n\nexport {\n\tfindWordFormsInString,\n\tfindTopicFormsInString,\n};\n"]}