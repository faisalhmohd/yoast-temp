{"version":3,"sources":["../../../../../src/researches/passiveVoice/periphrastic/determinePassiveSentencePart.js"],"names":["sentencePartText","sentencePartAuxiliaries","language","participles","some","languageVariables","auxiliaries","includes","auxiliary","auxiliariesGerman","allAuxiliaries","auxiliariesDutch","auxiliariesPolish","de","nl","pl"],"mappings":";;;;;;kBAwCe,UAAUA,gBAAV,EAA4BC,uBAA5B,EAAqDC,QAArD,EAAgE;AAC9E,KAAIC,cAAc,EAAlB;AACA;AACA,KAAKD,aAAa,IAAb,IAAqBA,aAAa,IAAlC,IAA0CA,aAAa,IAA5D,EAAmE;AAClE;AACA,MAAK,CAAED,wBAAwBG,IAAxB,CAA8B;AAAA,UAAaC,kBAAmBH,QAAnB,EAA8BI,WAA9B,CAA0CC,QAA1C,CAAoDC,SAApD,CAAb;AAAA,GAA9B,CAAP,EAAsH;AACrH,UAAO,KAAP;AACA;AACD;AACA,MAAKN,aAAa,IAAlB,EAAyB;AACxBC,iBAAc,8BAAsBH,gBAAtB,EAAwCC,uBAAxC,EAAiEC,QAAjE,CAAd;AACA;AACD;AACA,MAAKA,aAAa,IAAb,IAAqBA,aAAa,IAAvC,EAA8C;AAC7CC,iBAAc,8BAAgBH,gBAAhB,EAAkCC,uBAAlC,EAA2DC,QAA3D,CAAd;AACA;AACD,EAbD,MAaO;AACNC,gBAAc,8BAAgBH,gBAAhB,EAAkCC,uBAAlC,EAA2DC,QAA3D,CAAd;AACA;;AAED,QAAO,8CAAgCC,WAAhC,CAAP;AACA,C;;AA7DD;;;;AACA;;;;AAGA;;;;AAEA;;;;AAGA;;;;AAKA;;;;;;AATA,IAAMM,oBAAoB,6BAA2BC,cAArD;;AAFA;;;AAKA;;;AAGA,IAAMC,mBAAmB,4BAAzB;;AAEA;;;AAGA,IAAMC,oBAAoB,4BAA1B;;AAEA;AACA,IAAMP,oBAAoB;AACzBQ,KAAI;AACHP,eAAaG;AADV,EADqB;AAIzBK,KAAI;AACHR,eAAaK;AADV,EAJqB;AAOzBI,KAAI;AACHT,eAAaM;AADV;AAPqB,CAA1B;;AAYA","file":"determinePassiveSentencePart.js","sourcesContent":["import determineSentencePartIsPassive from \"./determineSentencePartIsPassive.js\";\nimport getParticiples from \"./getParticiples.js\";\n\n// Imports specific for German.\nimport auxiliariesGermanFactory from \"../../german/passiveVoice/auxiliaries.js\";\nconst auxiliariesGerman = auxiliariesGermanFactory().allAuxiliaries;\nimport getParticiplesGerman from \"../../german/passiveVoice/getParticiples.js\";\n\n// Imports specific for Dutch.\nimport auxiliariesDutchFactory from \"../../dutch/passiveVoice/auxiliaries.js\";\n\nconst auxiliariesDutch = auxiliariesDutchFactory();\n\n// Imports specific for Polish.\nimport auxiliariesPolishFactory from \"../../polish/passiveVoice/auxiliaries.js\";\n\nconst auxiliariesPolish = auxiliariesPolishFactory();\n\n// The language-specific auxiliaries.\nconst languageVariables = {\n\tde: {\n\t\tauxiliaries: auxiliariesGerman,\n\t},\n\tnl: {\n\t\tauxiliaries: auxiliariesDutch,\n\t},\n\tpl: {\n\t\tauxiliaries: auxiliariesPolish,\n\t},\n};\n\n/**\n * Determines whether a sentence part is passive.\n *\n * @param {string}  sentencePartText        The sentence part to determine voice for.\n * @param {Array}   sentencePartAuxiliaries A list with auxiliaries in this sentence part.\n * @param {string}  language                The language of the sentence part.\n\n * @returns {boolean} Returns true if passive, otherwise returns false.\n */\nexport default function( sentencePartText, sentencePartAuxiliaries, language ) {\n\tlet participles = [];\n\t// For German, Dutch and Polish, this path is taken in order to ensure that sentence parts without auxiliaries are not set to passive.\n\tif ( language === \"de\" || language === \"nl\" || language === \"pl\" ) {\n\t\t// Return false if there are no auxiliaries in the sentence part.\n\t\tif ( ! sentencePartAuxiliaries.some( auxiliary => languageVariables[ language ].auxiliaries.includes( auxiliary ) ) ) {\n\t\t\treturn false;\n\t\t}\n\t\t// For German, we use a separate function to get participles.\n\t\tif ( language === \"de\" ) {\n\t\t\tparticiples = getParticiplesGerman( sentencePartText, sentencePartAuxiliaries, language );\n\t\t}\n\t\t// For Dutch and Polish, we use the same function as for other languages.\n\t\tif ( language === \"nl\" || language === \"pl\" ) {\n\t\t\tparticiples = getParticiples( sentencePartText, sentencePartAuxiliaries, language );\n\t\t}\n\t} else {\n\t\tparticiples = getParticiples( sentencePartText, sentencePartAuxiliaries, language );\n\t}\n\n\treturn determineSentencePartIsPassive( participles );\n}\n"]}