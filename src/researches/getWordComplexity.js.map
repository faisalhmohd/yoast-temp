{"version":3,"sources":["../../../src/researches/getWordComplexity.js"],"names":["paper","sentences","getText","sentence","words","getWordComplexityForSentence","results","word","i","push","wordIndex","complexity"],"mappings":";;;;;;kBAgCe,UAAUA,KAAV,EAAkB;AAChC,KAAIC,YAAY,4BAAcD,MAAME,OAAN,EAAd,CAAhB;;AAEA,QAAO,mBAAKD,SAAL,EAAgB,UAAUE,QAAV,EAAqB;AAC3C,SAAO;AACNA,aAAUA,QADJ;AAENC,UAAOC,6BAA8BF,QAA9B;AAFD,GAAP;AAIA,EALM,CAAP;AAMA,C;;AAzCD;;;;AACA;;;;AACA;;;;AAEA;;;;AAGA;;;;;AAKA,IAAIE,+BAA+B,SAA/BA,4BAA+B,CAAUF,QAAV,EAAqB;AACvD,KAAIC,QAAQ,wBAAUD,QAAV,CAAZ;AACA,KAAIG,UAAU,EAAd;;AAEA,wBAASF,KAAT,EAAgB,UAAUG,IAAV,EAAgBC,CAAhB,EAAoB;AACnCF,UAAQG,IAAR,CAAc;AACbF,SAAMA,IADO;AAEbG,cAAWF,CAFE;AAGbG,eAAY,qBAAgBJ,IAAhB;AAHC,GAAd;AAKA,EAND;;AAQA,QAAOD,OAAP;AACA,CAbD;;AAeA","file":"getWordComplexity.js","sourcesContent":["import getWords from \"../stringProcessing/getWords.js\";\nimport countSyllables from \"../stringProcessing/syllables/count.js\";\nimport getSentences from \"../stringProcessing/getSentences.js\";\n\nimport { map } from \"lodash-es\";\nimport { forEach } from \"lodash-es\";\n\n/**\n * Gets the complexity per word, along with the index for the sentence.\n * @param {string} sentence The sentence to get wordComplexity from.\n * @returns {Array} A list with words, the index and the complexity per word.\n */\nvar getWordComplexityForSentence = function( sentence ) {\n\tvar words = getWords( sentence );\n\tvar results = [];\n\n\tforEach( words, function( word, i ) {\n\t\tresults.push( {\n\t\t\tword: word,\n\t\t\twordIndex: i,\n\t\t\tcomplexity: countSyllables( word ),\n\t\t} );\n\t} );\n\n\treturn results;\n};\n\n/**\n * Calculates the complexity of words in a text, returns each words with their complexity.\n * @param {Paper} paper The Paper object to get the text from.\n * @returns {Object} The words found in the text with the number of syllables.\n */\nexport default function( paper ) {\n\tvar sentences = getSentences( paper.getText() );\n\n\treturn map( sentences, function( sentence ) {\n\t\treturn {\n\t\t\tsentence: sentence,\n\t\t\twords: getWordComplexityForSentence( sentence ),\n\t\t};\n\t} );\n}\n\n"]}