{"version":3,"sources":["../../../../../src/researches/polish/passiveVoice/SentencePart.js"],"names":["PolishSentencePart","sentencePartText","auxiliaries","call","require","inherits","prototype","getParticiples","getSentencePartText","getAuxiliaries"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEA;;;;;;;AAOA,IAAMA,qBAAqB,SAArBA,kBAAqB,CAAUC,gBAAV,EAA4BC,WAA5B,EAA0C;AACpE,yBAAaC,IAAb,CAAmB,IAAnB,EAAyBF,gBAAzB,EAA2CC,WAA3C,EAAwD,OAAxD;AACA,CAFD;;AAIAE,QAAS,MAAT,EAAkBC,QAAlB,CAA4BL,kBAA5B;;AAEA;;;;;AAKAA,mBAAmBM,SAAnB,CAA6BC,cAA7B,GAA8C,YAAW;AACxD,SAAO,8BAAgB,KAAKC,mBAAL,EAAhB,EAA4C,KAAKC,cAAL,EAA5C,EAAmE,IAAnE,CAAP;AACA,CAFD;;kBAIeT,kB","file":"SentencePart.js","sourcesContent":["import SentencePart from \"../../../values/SentencePart.js\";\nimport getParticiples from \"../../passiveVoice/periphrastic/getParticiples.js\";\n\n/**\n * Creates a Polish-specific sentence part.\n *\n * @param {string} sentencePartText The text from the sentence part.\n * @param {Array} auxiliaries The list with auxiliaries.\n * @constructor\n */\nconst PolishSentencePart = function( sentencePartText, auxiliaries ) {\n\tSentencePart.call( this, sentencePartText, auxiliaries, \"pl_PL\" );\n};\n\nrequire( \"util\" ).inherits( PolishSentencePart, SentencePart );\n\n/**\n * Returns the participles found in the sentence part.\n *\n * @returns {Array} The array of Participle Objects.\n */\nPolishSentencePart.prototype.getParticiples = function() {\n\treturn getParticiples( this.getSentencePartText(), this.getAuxiliaries(), \"pl\" );\n};\n\nexport default PolishSentencePart;\n"]}