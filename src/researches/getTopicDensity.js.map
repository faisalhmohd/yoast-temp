{"version":3,"sources":["../../../src/researches/getTopicDensity.js"],"names":["paper","wordCount","getText","topicCountResult","count"],"mappings":";;;;;;kBAYe,UAAUA,KAAV,EAAkB;AAChC,KAAMC,YAAY,0BAAYD,MAAME,OAAN,EAAZ,CAAlB;AACA,KAAKD,cAAc,CAAnB,EAAuB;AACtB,SAAO,CAAP;AACA;AACD,KAAME,mBAAmB,0BAAYH,KAAZ,EAAoBI,KAA7C;AACA,QAASD,mBAAmBF,SAArB,GAAmC,GAA1C;AACA,C;;AAjBD;;;;AAEA","file":"getTopicDensity.js","sourcesContent":["/** @module analyses/getTopicDensity */\n\nimport countWords from \"../stringProcessing/countWords.js\";\n\nimport topicCount from \"./topicCount.js\";\n\n/**\n * Calculates the topic density .\n *\n * @param {Object} paper The paper containing keyword, (synonyms) and text.\n * @returns {number} The topic density.\n */\nexport default function( paper ) {\n\tconst wordCount = countWords( paper.getText() );\n\tif ( wordCount === 0 ) {\n\t\treturn 0;\n\t}\n\tconst topicCountResult = topicCount( paper ).count;\n\treturn ( topicCountResult / wordCount ) * 100;\n}\n"]}