{"version":3,"sources":["../../../../src/worker/transporter/serialize.js"],"names":["serialize","thing","map","thingIsObject","value"],"mappings":";;;;;kBAWwBA,S;;AAXxB;;AAIA;;;;;;;AAOe,SAASA,SAAT,CAAoBC,KAApB,EAA4B;AAC1C,KAAK,uBAASA,KAAT,CAAL,EAAwB;AACvB,SAAOA,MAAMC,GAAN,CAAWF,SAAX,CAAP;AACA;;AAED,KAAMG,gBAAgB,wBAAUF,KAAV,CAAtB;;AAEA,KAAKE,iBAAiBF,MAAMD,SAA5B,EAAwC;AACvC,SAAOC,MAAMD,SAAN,EAAP;AACA;;AAED,KAAKG,aAAL,EAAqB;AACpB,SAAO,yBAAWF,KAAX,EAAkB,UAAEG,KAAF;AAAA,UAAaJ,UAAWI,KAAX,CAAb;AAAA,GAAlB,CAAP;AACA;;AAED,QAAOH,KAAP;AACA","file":"serialize.js","sourcesContent":["import { isArray } from \"lodash-es\";\nimport { isObject } from \"lodash-es\";\nimport { mapValues } from \"lodash-es\";\n\n/**\n * Serializes a data structure to transfer it over a web worker message.\n *\n * @param {*} thing The data structure to serialize.\n *\n * @returns {*} The serialized data structure.\n */\nexport default function serialize( thing ) {\n\tif ( isArray( thing ) ) {\n\t\treturn thing.map( serialize );\n\t}\n\n\tconst thingIsObject = isObject( thing );\n\n\tif ( thingIsObject && thing.serialize ) {\n\t\treturn thing.serialize();\n\t}\n\n\tif ( thingIsObject ) {\n\t\treturn mapValues( thing, ( value ) => serialize( value ) );\n\t}\n\n\treturn thing;\n}\n"]}