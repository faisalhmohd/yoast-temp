{"version":3,"sources":["../../../src/assessmentHelpers/recommendedKeywordCount.js"],"names":["text","keyphraseLength","recommendedKeywordDensity","maxOrMin","wordCount","lengthKeyphraseFactor","recommendedKeywordCount","Math","ceil","floor"],"mappings":";;;;;;kBAce,UAAUA,IAAV,EAAgBC,eAAhB,EAAiCC,yBAAjC,EAA4DC,QAA5D,EAAuE;AACrF,KAAMC,YAAY,0BAAYJ,IAAZ,CAAlB;;AAEA,KAAKI,cAAc,CAAnB,EAAuB;AACtB,SAAO,CAAP;AACA;;AAED,KAAMC,wBAAwB,qCAAuBJ,eAAvB,CAA9B;AACA,KAAMK,0BAA4BJ,4BAA4BE,SAA9B,IAA8C,MAAMC,qBAApD,CAAhC;;AAEA;;;;AAIA,KAAKC,0BAA0B,CAA/B,EAAmC;AAClC,SAAO,CAAP;AACA;;AAED,SAASH,QAAT;AACC,OAAK,KAAL;AACC;AACA,UAAOI,KAAKC,IAAL,CAAWF,uBAAX,CAAP;AACD;AACA,OAAK,KAAL;AACC;AACA,UAAOC,KAAKE,KAAL,CAAYH,uBAAZ,CAAP;AAPF;AASA,C;;AAzCD;;;;AACA","file":"recommendedKeywordCount.js","sourcesContent":["import countWords from \"../stringProcessing/countWords.js\";\nimport keyphraseLengthFactor from \"../helpers/keyphraseLengthFactor.js\";\n\n/**\n * Calculates a recommended keyword count for a text. The formula to calculate this number is based on the\n * keyword density formula.\n *\n * @param {string} text The paper text.\n * @param {number} keyphraseLength The length of the focus keyphrase in words.\n * @param {number} recommendedKeywordDensity The recommended keyword density (either maximum or minimum).\n * @param {string} maxOrMin Whether it's a maximum or minimum recommended keyword density.\n *\n * @returns {number} The recommended keyword count.\n */\nexport default function( text, keyphraseLength, recommendedKeywordDensity, maxOrMin ) {\n\tconst wordCount = countWords( text );\n\n\tif ( wordCount === 0 ) {\n\t\treturn 0;\n\t}\n\n\tconst lengthKeyphraseFactor = keyphraseLengthFactor( keyphraseLength );\n\tconst recommendedKeywordCount = ( recommendedKeywordDensity * wordCount ) / ( 100 * lengthKeyphraseFactor );\n\n\t/*\n\t * The recommended keyword count should always be at least 2,\n\t * regardless of the keyword density, the word count, or the keyphrase length.\n\t */\n\tif ( recommendedKeywordCount < 2 ) {\n\t\treturn 2;\n\t}\n\n\tswitch ( maxOrMin ) {\n\t\tcase \"min\":\n\t\t\t// Round up for the recommended minimum count.\n\t\t\treturn Math.ceil( recommendedKeywordCount );\n\t\tdefault:\n\t\tcase \"max\":\n\t\t\t// Round down for the recommended maximum count.\n\t\t\treturn Math.floor( recommendedKeywordCount );\n\t}\n}\n"]}