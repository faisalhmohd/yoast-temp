{"version":3,"sources":["../../../../src/assessments/readability/transitionWordsAssessment.js"],"names":["availableLanguages","calculateTransitionWordPercentage","sentences","transitionWordSentences","totalSentences","calculateScoreFromPercentage","percentage","calculateTransitionWordResult","i18n","score","hasMarks","urlTitle","urlCallToAction","text","sprintf","dgettext","transitionWordsAssessment","paper","researcher","getResearch","transitionWordResult","assessmentResult","setScore","setText","setHasMarks","transitionWordsMarker","sentenceResults","sentenceResult","sentence","original","marked","identifier","getResult","isApplicable","isLanguageAvailable","getLocale","hasText","getMarks"],"mappings":"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","file":"transitionWordsAssessment.js","sourcesContent":["import { map } from \"lodash-es\";\n\nimport formatNumber from \"../../helpers/formatNumber\";\nimport { inRangeStartInclusive as inRange } from \"../../helpers/inRange\";\nimport { createAnchorOpeningTag } from \"../../helpers/shortlinker\";\nimport { stripIncompleteTags as stripTags } from \"../../stringProcessing/stripHTMLTags\";\nimport AssessmentResult from \"../../values/AssessmentResult\";\nimport Mark from \"../../values/Mark.js\";\nimport marker from \"../../markers/addMark.js\";\nimport getLanguageAvailability from \"../../helpers/getLanguageAvailability.js\";\nconst availableLanguages = [ \"en\", \"de\", \"es\", \"fr\", \"nl\", \"it\", \"pt\", \"ru\", \"ca\", \"pl\", \"sv\" ];\n\n/**\n * Calculates the actual percentage of transition words in the sentences.\n *\n * @param {object} sentences The object containing the total number of sentences and the number of sentences containing\n * a transition word.\n * @returns {number} The percentage of sentences containing a transition word.\n */\nconst calculateTransitionWordPercentage = function( sentences ) {\n\tif ( sentences.transitionWordSentences === 0 || sentences.totalSentences === 0 ) {\n\t\treturn 0;\n\t}\n\n\treturn formatNumber( ( sentences.transitionWordSentences / sentences.totalSentences ) * 100 );\n};\n\n/**\n * Calculates the score for the assessment based on the percentage of sentences containing transition words.\n *\n * @param {number} percentage The percentage of sentences containing transition words.\n * @returns {number} The score.\n */\nconst calculateScoreFromPercentage = function( percentage ) {\n\tif ( percentage < 20 ) {\n\t\t// Red indicator.\n\t\treturn 3;\n\t}\n\n\tif ( inRange( percentage, 20, 30 ) ) {\n\t\t// Orange indicator.\n\t\treturn 6;\n\t}\n\n\tif ( percentage >= 30 ) {\n\t\t// Green indicator.\n\t\treturn 9;\n\t}\n};\n\n/**\n * Calculates transition word result\n * @param {object} transitionWordSentences The object containing the total number of sentences and the number of sentences containing\n * a transition word.\n * @param {object} i18n The object used for translations.\n * @returns {object} Object containing score and text.\n */\nconst calculateTransitionWordResult = function( transitionWordSentences, i18n ) {\n\tconst percentage = calculateTransitionWordPercentage( transitionWordSentences );\n\tconst score = calculateScoreFromPercentage( percentage );\n\tconst hasMarks   = ( percentage > 0 );\n\tconst urlTitle = createAnchorOpeningTag( \"https://yoa.st/34z\" );\n\tconst urlCallToAction = createAnchorOpeningTag( \"https://yoa.st/35a\" );\n\n\tif ( score < 7 && percentage === 0 ) {\n\t\treturn {\n\t\t\tscore: formatNumber( score ),\n\t\t\thasMarks: hasMarks,\n\t\t\ttext: i18n.sprintf(\n\t\t\t\t/* Translators: %1$s and %3$s expand to a link to yoast.com, %2$s expands to the anchor end tag */\n\t\t\t\ti18n.dgettext( \"js-text-analysis\",\n\t\t\t\t\t\"%1$sTransition words%2$s: None of the sentences contain transition words. %3$sUse some%2$s.\"\n\t\t\t\t),\n\t\t\t\turlTitle,\n\t\t\t\t\"</a>\",\n\t\t\t\turlCallToAction ),\n\t\t};\n\t}\n\n\tif ( score < 7 ) {\n\t\treturn {\n\t\t\tscore: formatNumber( score ),\n\t\t\thasMarks: hasMarks,\n\t\t\ttext: i18n.sprintf(\n\t\t\t\t/* Translators: %1$s and %4$s expand to a link to yoast.com, %2$s expands to the anchor end tag,\n\t\t\t\t%3$s expands to the percentage of sentences containing transition words */\n\t\t\t\ti18n.dgettext( \"js-text-analysis\",\n\t\t\t\t\t\"%1$sTransition words%2$s: Only %3$s of the sentences contain transition words, which is not enough. %4$sUse more of them%2$s.\"\n\t\t\t\t),\n\t\t\t\turlTitle,\n\t\t\t\t\"</a>\",\n\t\t\t\tpercentage + \"%\",\n\t\t\t\turlCallToAction ),\n\t\t};\n\t}\n\n\treturn {\n\t\tscore: formatNumber( score ),\n\t\thasMarks: hasMarks,\n\t\ttext: i18n.sprintf(\n\t\t\t/* Translators: %1$s expands to a link on yoast.com, %3$s expands to the anchor end tag. */\n\t\t\ti18n.dgettext( \"js-text-analysis\",\n\t\t\t\t\"%1$sTransition words%2$s: Well done!\"\n\t\t\t),\n\t\t\turlTitle,\n\t\t\t\"</a>\" ),\n\t};\n};\n\n/**\n * Scores the percentage of sentences including one or more transition words.\n * @param {object} paper The paper to use for the assessment.\n * @param {object} researcher The researcher used for calling research.\n * @param {object} i18n The object used for translations.\n * @returns {object} The Assessment result.\n */\nconst transitionWordsAssessment = function( paper, researcher, i18n ) {\n\tconst transitionWordSentences = researcher.getResearch( \"findTransitionWords\" );\n\tconst transitionWordResult = calculateTransitionWordResult( transitionWordSentences, i18n );\n\tconst assessmentResult = new AssessmentResult();\n\n\tassessmentResult.setScore( transitionWordResult.score );\n\tassessmentResult.setText( transitionWordResult.text );\n\tassessmentResult.setHasMarks( transitionWordResult.hasMarks );\n\n\treturn assessmentResult;\n};\n\n/**\n * Marks text for the transition words assessment.\n * @param {Paper} paper The paper to use for the marking.\n * @param {Researcher} researcher The researcher containing the necessary research.\n * @returns {Array<Mark>} A list of marks that should be applied.\n */\nconst transitionWordsMarker = function( paper, researcher ) {\n\tconst transitionWordSentences = researcher.getResearch( \"findTransitionWords\" );\n\n\treturn map( transitionWordSentences.sentenceResults, function( sentenceResult ) {\n\t\tlet sentence = sentenceResult.sentence;\n\t\tsentence = stripTags( sentence );\n\t\treturn new Mark( {\n\t\t\toriginal: sentence,\n\t\t\tmarked: marker( sentence ),\n\t\t} );\n\t} );\n};\n\nexport default {\n\tidentifier: \"textTransitionWords\",\n\tgetResult: transitionWordsAssessment,\n\tisApplicable: function( paper ) {\n\t\tconst isLanguageAvailable = getLanguageAvailability( paper.getLocale(), availableLanguages );\n\t\treturn ( isLanguageAvailable && paper.hasText() );\n\t},\n\tgetMarks: transitionWordsMarker,\n};\n"]}