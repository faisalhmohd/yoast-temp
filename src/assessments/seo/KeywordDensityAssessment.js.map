{"version":3,"sources":["../../../../src/assessments/seo/KeywordDensityAssessment.js"],"names":["KeywordDensityAssessment","config","defaultConfig","parametersRegular","noWordForms","overMaximum","maximum","minimum","multipleWordForms","parametersRecalibration","scores","wayOverMaximum","correctDensity","underMinimum","urlTitle","urlCallToAction","identifier","_config","text","keyphraseLength","process","env","YOAST_RECALIBRATION","_hasMorphologicalForms","_boundaries","_minRecommendedKeywordCount","_maxRecommendedKeywordCount","paper","researcher","i18n","getData","getLocale","_keywordCount","getResearch","length","setBoundaries","getText","assessmentResult","_keywordDensity","calculatedScore","calculateResultRecalibration","calculateResultRegular","setScore","score","setText","resultText","setHasMarks","count","max","maxText","roundedKeywordDensity","keywordDensityPercentage","hasNoMatches","sprintf","dgettext","hasTooFewMatches","dngettext","hasGoodNumberOfMatches","hasTooManyMatches","markings","hasText","hasKeyword"],"mappings":"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","file":"KeywordDensityAssessment.js","sourcesContent":["import { merge } from \"lodash-es\";\n\nimport recommendedKeywordCount from \"../../assessmentHelpers/recommendedKeywordCount.js\";\nimport Assessment from \"../../assessment\";\nimport getLanguage from \"../../helpers/getLanguage\";\nimport AssessmentResult from \"../../values/AssessmentResult\";\nimport { inRangeEndInclusive, inRangeStartEndInclusive, inRangeStartInclusive } from \"../../helpers/inRange\";\nimport { createAnchorOpeningTag } from \"../../helpers/shortlinker\";\nimport formatNumber from \"../../helpers/formatNumber\";\nimport keyphraseLengthFactor from \"../../helpers/keyphraseLengthFactor.js\";\nimport countWords from \"../../stringProcessing/countWords\";\n\n/**\n * Represents the assessment that will look if the keyphrase density is within the recommended range.\n */\nclass KeywordDensityAssessment extends Assessment {\n\t/**\n\t * Sets the identifier and the config.\n\t *\n\t * @param {Object} [config] The configuration to use.\n\t * In the regular analysis, if word forms are not available\n\t * @param {number} [config.parametersRegular.noWordForms.overMaximum] The percentage of keyphrase instances in the text that\n\t * is way over the maximum.\n\t * @param {number} [config.parametersRegular.noWordForms.maximum] The maximum percentage of keyphrase instances in the text.\n\t * @param {number} [config.parametersRegular.noWordForms.minimum] The minimum percentage of keyphrase instances in the text.\n\t * In the regular analysis, if word forms are available\n\t * @param {number} [config.parametersRegular.multipleWordForms.overMaximum] The percentage of keyphrase instances in the text that\n\t * is way over the maximum.\n\t * @param {number} [config.parametersRegular.multipleWordForms.maximum] The maximum percentage of keyphrase instances in the text.\n\t * @param {number} [config.parametersRegular.multipleWordForms.minimum] The minimum percentage of keyphrase instances in the text.\n\t * In the recalibration analysis, if word forms are not available\n\t * @param {number} [config.parametersRecalibration.noWordForms.overMaximum] The percentage of keyphrase instances in the text that\n\t * is way over the maximum.\n\t * @param {number} [config.parametersRecalibration.noWordForms.maximum] The maximum percentage of keyphrase instances in the text.\n\t * @param {number} [config.parametersRecalibration.noWordForms.minimum] The minimum percentage of keyphrase instances in the text.\n\t * In the recalibration analysis, if word forms are available\n\t * @param {number} [config.parametersRecalibration.multipleWordForms.overMaximum] The percentage of keyphrase instances in the text\n\t * that is way over the maximum.\n\t * @param {number} [config.parametersRecalibration.multipleWordForms.maximum] The maximum percentage of keyphrase instances in the text.\n\t * @param {number} [config.parametersRecalibration.multipleWordForms.minimum] The minimum percentage of keyphrase instances in the text.\n\t * In all analyses\n\t * @param {number} [config.scores.wayOverMaximum] The score to return if there are way too many instances of keyphrase in the text.\n\t * @param {number} [config.scores.overMaximum] The score to return if there are too many instances of keyphrase in the text.\n\t * @param {number} [config.scores.correctDensity] The score to return if there is a good number of keyphrase instances in the text.\n\t * @param {number} [config.scores.underMinimum] The score to return if there is not enough keyphrase instances in the text.\n\t * @param {string} [config.url] The URL to the relevant KB article.\n\t *\n\t * @returns {void}\n\t */\n\tconstructor( config = {} ) {\n\t\tsuper();\n\n\t\tconst defaultConfig = {\n\t\t\tparametersRegular: {\n\t\t\t\tnoWordForms: {\n\t\t\t\t\toverMaximum: 3.5,\n\t\t\t\t\tmaximum: 2.5,\n\t\t\t\t\tminimum: 0.5,\n\t\t\t\t},\n\t\t\t\tmultipleWordForms: {\n\t\t\t\t\toverMaximum: 3.5,\n\t\t\t\t\tmaximum: 3.0,\n\t\t\t\t\tminimum: 0.5,\n\t\t\t\t},\n\t\t\t},\n\t\t\tparametersRecalibration: {\n\t\t\t\tnoWordForms: {\n\t\t\t\t\toverMaximum: 4,\n\t\t\t\t\tmaximum: 3,\n\t\t\t\t\tminimum: 0.5,\n\t\t\t\t},\n\t\t\t\tmultipleWordForms: {\n\t\t\t\t\toverMaximum: 4,\n\t\t\t\t\tmaximum: 3.5,\n\t\t\t\t\tminimum: 0.5,\n\t\t\t\t},\n\t\t\t},\n\t\t\tscores: {\n\t\t\t\twayOverMaximum: -50,\n\t\t\t\toverMaximum: -10,\n\t\t\t\tcorrectDensity: 9,\n\t\t\t\tunderMinimum: 4,\n\t\t\t},\n\t\t\turlTitle: createAnchorOpeningTag( \"https://yoa.st/33v\" ),\n\t\t\turlCallToAction: createAnchorOpeningTag( \"https://yoa.st/33w\" ),\n\t\t};\n\n\t\tthis.identifier = \"keywordDensity\";\n\t\tthis._config = merge( defaultConfig, config );\n\t}\n\n\t/**\n\t * Determines correct boundaries depending on the version (Recalibration or regular) and depending on the availability\n\t * of morphological forms.\n\t *\n\t * @param {string} text The paper text.\n\t * @param {number} keyphraseLength The length of the keyphrase in words.\n\t *\n\t * @returns {void}\n\t */\n\tsetBoundaries( text, keyphraseLength ) {\n\t\tif ( process.env.YOAST_RECALIBRATION === \"enabled\" ) {\n\t\t\tif ( this._hasMorphologicalForms ) {\n\t\t\t\tthis._boundaries = this._config.parametersRecalibration.multipleWordForms;\n\t\t\t} else {\n\t\t\t\tthis._boundaries = this._config.parametersRecalibration.noWordForms;\n\t\t\t}\n\t\t\tthis._minRecommendedKeywordCount = recommendedKeywordCount( text, keyphraseLength, this._boundaries.minimum, \"min\" );\n\t\t\tthis._maxRecommendedKeywordCount = recommendedKeywordCount( text, keyphraseLength, this._boundaries.maximum, \"max\" );\n\t\t} else {\n\t\t\tif ( this._hasMorphologicalForms ) {\n\t\t\t\tthis._boundaries = this._config.parametersRegular.multipleWordForms;\n\t\t\t} else {\n\t\t\t\tthis._boundaries = this._config.parametersRegular.noWordForms;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Runs the keyphrase density module, based on this returns an assessment\n\t * result with score.\n\t *\n\t * @param {Paper} paper The paper to use for the assessment.\n\t * @param {Researcher} researcher The researcher used for calling the\n\t *                                research.\n\t * @param {Jed} i18n The object used for translations.\n\t *\n\t * @returns {AssessmentResult} The result of the assessment.\n\t */\n\tgetResult( paper, researcher, i18n ) {\n\t\tthis._hasMorphologicalForms = researcher.getData( \"morphology\" ) !== false && getLanguage( paper.getLocale() ) === \"en\";\n\n\t\tthis._keywordCount = researcher.getResearch( \"keywordCount\" );\n\t\tconst keyphraseLength = this._keywordCount.length;\n\n\t\tthis.setBoundaries( paper.getText(), keyphraseLength );\n\n\t\tconst assessmentResult = new AssessmentResult();\n\n\t\tthis._keywordDensity = researcher.getResearch( \"getKeywordDensity\" );\n\n\t\tlet calculatedScore = {};\n\n\t\t// Calculate score depending on the version (Recalibration or regular).\n\t\tif ( process.env.YOAST_RECALIBRATION === \"enabled\" ) {\n\t\t\tthis._keywordDensity = this._keywordDensity * keyphraseLengthFactor( keyphraseLength );\n\t\t\tcalculatedScore = this.calculateResultRecalibration( i18n );\n\t\t} else {\n\t\t\tcalculatedScore = this.calculateResultRegular( i18n );\n\t\t}\n\n\t\tassessmentResult.setScore( calculatedScore.score );\n\t\tassessmentResult.setText( calculatedScore.resultText );\n\t\tassessmentResult.setHasMarks( this._keywordCount.count > 0 );\n\n\t\treturn assessmentResult;\n\t}\n\n\t/**\n\t * Checks whether there are no keyphrase matches in the text.\n\t *\n\t * @returns {boolean} Returns true if the keyphrase count is 0.\n\t */\n\thasNoMatches() {\n\t\treturn this._keywordCount.count === 0;\n\t}\n\n\t/**\n\t * Checks whether there are too few keyphrase matches in the text.\n\t *\n\t * @returns {boolean} Returns true if the rounded keyword density is between 0 and the recommended minimum\n\t * or if there there is only 1 keyword match (regardless of the density).\n\t */\n\thasTooFewMatches() {\n\t\treturn inRangeStartInclusive(\n\t\t\tthis._keywordDensity,\n\t\t\t0,\n\t\t\tthis._boundaries.minimum,\n\t\t) || this._keywordCount.count === 1;\n\t}\n\n\t/**\n\t * Checks whether there is a good number of keyphrase matches in the text.\n\t *\n\t * @returns {boolean} Returns true if the rounded keyword density is between the recommended minimum\n\t * and the recommended maximum or if the keyword count is 2 and the recommended minimum is lower than 2.\n\t */\n\thasGoodNumberOfMatches() {\n\t\treturn inRangeStartEndInclusive(\n\t\t\tthis._keywordDensity,\n\t\t\tthis._boundaries.minimum,\n\t\t\tthis._boundaries.maximum\n\t\t) || ( this._keywordCount.count === 2 && this._minRecommendedKeywordCount <= 2 );\n\t}\n\n\t/**\n\t * Checks whether the number of keyphrase matches in the text is between the\n\t * recommended maximum and the specified overMaximum value.\n\t *\n\t * @returns {boolean} Returns true if the rounded keyphrase density is between\n\t *                    the recommended maximum and the specified overMaximum\n\t *                    value.\n\t */\n\thasTooManyMatches() {\n\t\treturn inRangeEndInclusive(\n\t\t\tthis._keywordDensity,\n\t\t\tthis._boundaries.maximum,\n\t\t\tthis._boundaries.overMaximum\n\t\t);\n\t}\n\n\t/**\n\t * Returns the score for the keyphrase density (for Regular analysis).\n\t *\n\t * @param {Jed} i18n The object used for translations.\n\t *\n\t * @returns {Object} The object with calculated score and resultText.\n\t */\n\tcalculateResultRegular( i18n ) {\n\t\tconst max = this._boundaries.maximum;\n\t\tconst maxText = `${ max }%`;\n\t\tconst roundedKeywordDensity = formatNumber( this._keywordDensity );\n\t\tconst keywordDensityPercentage = roundedKeywordDensity + \"%\";\n\n\t\tif ( this.hasNoMatches() ) {\n\t\t\treturn {\n\t\t\t\tscore: this._config.scores.underMinimum,\n\t\t\t\tresultText: i18n.sprintf(\n\t\t\t\t\t/* Translators:\n\t\t\t\t\t%1$s expands to the keyphrase density percentage,\n\t\t\t\t\t%2$d expands to the keyphrase count,\n\t\t\t\t\t%3$s and %4$s expand to links to Yoast.com,\n\t\t\t\t\t%5$s expands to the anchor end tag. */\n\t\t\t\t\ti18n.dgettext(\n\t\t\t\t\t\t\"js-text-analysis\",\n\t\t\t\t\t\t\"%3$sKeyphrase density%5$s: %1$s. \" +\n\t\t\t\t\t\t\"This is too low; the keyphrase was found %2$d times. %4$sFocus on your keyphrase%5$s!\",\n\t\t\t\t\t),\n\t\t\t\t\tkeywordDensityPercentage,\n\t\t\t\t\tthis._keywordCount.count,\n\t\t\t\t\tthis._config.urlTitle,\n\t\t\t\t\tthis._config.urlCallToAction,\n\t\t\t\t\t\"</a>\"\n\t\t\t\t),\n\t\t\t};\n\t\t}\n\n\t\tif ( this.hasTooFewMatches() ) {\n\t\t\treturn {\n\t\t\t\tscore: this._config.scores.underMinimum,\n\t\t\t\tresultText: i18n.sprintf(\n\t\t\t\t\t/* Translators:\n\t\t\t\t\t%1$s expands to the keyphrase density percentage,\n\t\t\t\t\t%2$d expands to the keyphrase count,\n\t\t\t\t\t%3$s and %4$s expand to links to Yoast.com,\n\t\t\t\t\t%5$s expands to the anchor end tag. */\n\t\t\t\t\ti18n.dngettext(\n\t\t\t\t\t\t\"js-text-analysis\",\n\t\t\t\t\t\t\"%3$sKeyphrase density%5$s: %1$s. \" +\n\t\t\t\t\t\t\"This is too low; the keyphrase was found %2$d time. %4$sFocus on your keyphrase%5$s!\",\n\t\t\t\t\t\t\"%3$sKeyphrase density%5$s: %1$s. \" +\n\t\t\t\t\t\t\"This is too low; the keyphrase was found %2$d times. %4$sFocus on your keyphrase%5$s!\",\n\t\t\t\t\t\tthis._keywordCount.count\n\t\t\t\t\t),\n\t\t\t\t\tkeywordDensityPercentage,\n\t\t\t\t\tthis._keywordCount.count,\n\t\t\t\t\tthis._config.urlTitle,\n\t\t\t\t\tthis._config.urlCallToAction,\n\t\t\t\t\t\"</a>\"\n\t\t\t\t),\n\t\t\t};\n\t\t}\n\n\t\tif ( this.hasGoodNumberOfMatches()  ) {\n\t\t\treturn {\n\t\t\t\tscore: this._config.scores.correctDensity,\n\t\t\t\tresultText: i18n.sprintf(\n\t\t\t\t\t/* Translators:\n\t\t\t\t\t%1$s expands to the keyphrase density percentage,\n\t\t\t\t\t%2$s expands to a link to Yoast.com,\n\t\t\t\t\t%3$s expands to the anchor end tag. */\n\t\t\t\t\ti18n.dngettext(\n\t\t\t\t\t\t\"js-text-analysis\",\n\t\t\t\t\t\t\"%2$sKeyphrase density%3$s: %1$s. \" +\n\t\t\t\t\t\t\"This is great!\",\n\t\t\t\t\t),\n\t\t\t\t\tkeywordDensityPercentage,\n\t\t\t\t\tthis._config.urlTitle,\n\t\t\t\t\t\"</a>\"\n\t\t\t\t),\n\t\t\t};\n\t\t}\n\n\t\tif ( this.hasTooManyMatches() ) {\n\t\t\treturn {\n\t\t\t\tscore: this._config.scores.overMaximum,\n\t\t\t\tresultText: i18n.sprintf(\n\t\t\t\t\t/* Translators:\n\t\t\t\t\t%1$s expands to the keyphrase density percentage,\n\t\t\t\t\t%2$d expands to the keyphrase count,\n\t\t\t\t\t%3$s expands to the maximum keyphrase density percentage,\n\t\t\t\t\t%4$s and %5$s expand to links to Yoast.com,\n\t\t\t\t\t%6$s expands to the anchor end tag. */\n\t\t\t\t\ti18n.dngettext(\n\t\t\t\t\t\t\"js-text-analysis\",\n\t\t\t\t\t\t\"%4$sKeyphrase density%6$s: %1$s. \" +\n\t\t\t\t\t\t\"This is over the advised %3$s maximum; the keyphrase was found %2$d time. \" +\n\t\t\t\t\t\t\"%5$sDon't overoptimize%6$s!\",\n\t\t\t\t\t\t\"%4$sKeyphrase density%6$s: %1$s. \" +\n\t\t\t\t\t\t\"This is over the advised %3$s maximum; the keyphrase was found %2$d times. \" +\n\t\t\t\t\t\t\"%5$sDon't overoptimize%6$s!\",\n\t\t\t\t\t\tthis._keywordCount.count\n\t\t\t\t\t),\n\t\t\t\t\tkeywordDensityPercentage,\n\t\t\t\t\tthis._keywordCount.count,\n\t\t\t\t\tmaxText,\n\t\t\t\t\tthis._config.urlTitle,\n\t\t\t\t\tthis._config.urlCallToAction,\n\t\t\t\t\t\"</a>\"\n\t\t\t\t),\n\t\t\t};\n\t\t}\n\n\t\t// Implicitly returns this if the rounded keyphrase density is higher than overMaximum.\n\t\treturn {\n\t\t\tscore: this._config.scores.wayOverMaximum,\n\t\t\tresultText: i18n.sprintf(\n\t\t\t\t/* Translators:\n\t\t\t\t%1$s expands to the keyphrase density percentage,\n\t\t\t\t%2$d expands to the keyphrase count,\n\t\t\t\t%3$s expands to the maximum keyphrase density percentage,\n\t\t\t\t%4$s and %5$s expand to links to Yoast.com,\n\t\t\t\t%6$s expands to the anchor end tag. */\n\t\t\t\ti18n.dngettext(\n\t\t\t\t\t\"js-text-analysis\",\n\t\t\t\t\t\"%4$sKeyphrase density%6$s: %1$s. \" +\n\t\t\t\t\t\"This is way over the advised %3$s maximum; the keyphrase was found %2$d time. \" +\n\t\t\t\t\t\"%5$sDon't overoptimize%6$s!\",\n\t\t\t\t\t\"%4$sKeyphrase density%6$s: %1$s. \" +\n\t\t\t\t\t\"This is way over the advised %3$s maximum; the keyphrase was found %2$d times. \" +\n\t\t\t\t\t\"%5$sDon't overoptimize%6$s!\",\n\t\t\t\t\tthis._keywordCount.count\n\t\t\t\t),\n\t\t\t\tkeywordDensityPercentage,\n\t\t\t\tthis._keywordCount.count,\n\t\t\t\tmaxText,\n\t\t\t\tthis._config.urlTitle,\n\t\t\t\tthis._config.urlCallToAction,\n\t\t\t\t\"</a>\"\n\t\t\t),\n\t\t};\n\t}\n\n\t/**\n\t * Returns the score for the keyphrase density (for Recalibration).\n\t *\n\t * @param {Jed} i18n The object used for translations.\n\t *\n\t * @returns {Object} The object with calculated score and resultText.\n\t */\n\tcalculateResultRecalibration( i18n ) {\n\t\tif ( this.hasNoMatches() ) {\n\t\t\treturn {\n\t\t\t\tscore: this._config.scores.underMinimum,\n\t\t\t\tresultText: i18n.sprintf(\n\t\t\t\t\t/* Translators:\n\t\t\t\t\t%1$s and %4$s expand to links to Yoast.com,\n\t\t\t\t\t%2$s expands to the anchor end tag,\n\t\t\t\t\t%3$d expands to the recommended minimal number of times the keyphrase should occur in the text. */\n\t\t\t\t\ti18n.dgettext(\n\t\t\t\t\t\t\"js-text-analysis\",\n\t\t\t\t\t\t\"%1$sKeyphrase density%2$s: The focus keyphrase was found 0 times. \" +\n\t\t\t\t\t\t\"That's less than the recommended minimum of %3$d times for a text of this length. \" +\n\t\t\t\t\t\t\"%4$sFocus on your keyphrase%2$s!\",\n\t\t\t\t\t),\n\t\t\t\t\tthis._config.urlTitle,\n\t\t\t\t\t\"</a>\",\n\t\t\t\t\tthis._minRecommendedKeywordCount,\n\t\t\t\t\tthis._config.urlCallToAction,\n\t\t\t\t),\n\t\t\t};\n\t\t}\n\n\t\tif ( this.hasTooFewMatches() ) {\n\t\t\treturn {\n\t\t\t\tscore: this._config.scores.underMinimum,\n\t\t\t\tresultText: i18n.sprintf(\n\t\t\t\t\t/* Translators:\n\t\t\t\t\t%1$s and %4$s expand to links to Yoast.com,\n\t\t\t\t\t%2$s expands to the anchor end tag,\n\t\t\t\t\t%3$d expands to the recommended minimal number of times the keyphrase should occur in the text,\n\t\t\t\t\t%5$d expands to the number of times the keyphrase occurred in the text. */\n\t\t\t\t\ti18n.dngettext(\n\t\t\t\t\t\t\"js-text-analysis\",\n\t\t\t\t\t\t\"%1$sKeyphrase density%2$s: The focus keyphrase was found %5$d time. That's less than the \" +\n\t\t\t\t\t\t\"recommended minimum of %3$d times for a text of this length. %4$sFocus on your keyphrase%2$s!\",\n\t\t\t\t\t\t\"%1$sKeyphrase density%2$s: The focus keyphrase was found %5$d times. That's less than the \" +\n\t\t\t\t\t\t\"recommended minimum of %3$d times for a text of this length. %4$sFocus on your keyphrase%2$s!\",\n\t\t\t\t\t\tthis._keywordCount.count\n\t\t\t\t\t),\n\t\t\t\t\tthis._config.urlTitle,\n\t\t\t\t\t\"</a>\",\n\t\t\t\t\tthis._minRecommendedKeywordCount,\n\t\t\t\t\tthis._config.urlCallToAction,\n\t\t\t\t\tthis._keywordCount.count\n\t\t\t\t),\n\t\t\t};\n\t\t}\n\n\t\tif ( this.hasGoodNumberOfMatches()  ) {\n\t\t\treturn {\n\t\t\t\tscore: this._config.scores.correctDensity,\n\t\t\t\tresultText: i18n.sprintf(\n\t\t\t\t\t/* Translators:\n\t\t\t\t\t%1$s expands to a link to Yoast.com,\n\t\t\t\t\t%2$s expands to the anchor end tag,\n\t\t\t\t\t%3$d expands to the number of times the keyphrase occurred in the text. */\n\t\t\t\t\ti18n.dngettext(\n\t\t\t\t\t\t\"js-text-analysis\",\n\t\t\t\t\t\t\"%1$sKeyphrase density%2$s: The focus keyphrase was found %3$d time. This is great!\",\n\t\t\t\t\t\t\"%1$sKeyphrase density%2$s: The focus keyphrase was found %3$d times. This is great!\",\n\t\t\t\t\t\tthis._keywordCount.count\n\t\t\t\t\t),\n\t\t\t\t\tthis._config.urlTitle,\n\t\t\t\t\t\"</a>\",\n\t\t\t\t\tthis._keywordCount.count\n\t\t\t\t),\n\t\t\t};\n\t\t}\n\n\t\tif ( this.hasTooManyMatches() ) {\n\t\t\treturn {\n\t\t\t\tscore: this._config.scores.overMaximum,\n\t\t\t\tresultText: i18n.sprintf(\n\t\t\t\t\t/* Translators:\n\t\t\t\t\t%1$s and %4$s expand to links to Yoast.com,\n\t\t\t\t\t%2$s expands to the anchor end tag,\n\t\t\t\t\t%3$d expands to the recommended maximal number of times the keyphrase should occur in the text,\n\t\t\t\t\t%5$d expands to the number of times the keyphrase occurred in the text. */\n\t\t\t\t\ti18n.dngettext(\n\t\t\t\t\t\t\"js-text-analysis\",\n\t\t\t\t\t\t\"%1$sKeyphrase density%2$s: The focus keyphrase was found %5$d time. That's more than the \" +\n\t\t\t\t\t\t\"recommended maximum of %3$d times for a text of this length. %4$sDon't overoptimize%2$s!\",\n\t\t\t\t\t\t\"%1$sKeyphrase density%2$s: The focus keyphrase was found %5$d times. That's more than the \" +\n\t\t\t\t\t\t\"recommended maximum of %3$d times for a text of this length. %4$sDon't overoptimize%2$s!\",\n\t\t\t\t\t\tthis._keywordCount.count\n\t\t\t\t\t),\n\t\t\t\t\tthis._config.urlTitle,\n\t\t\t\t\t\"</a>\",\n\t\t\t\t\tthis._maxRecommendedKeywordCount,\n\t\t\t\t\tthis._config.urlCallToAction,\n\t\t\t\t\tthis._keywordCount.count\n\t\t\t\t),\n\t\t\t};\n\t\t}\n\n\t\t// Implicitly returns this if the rounded keyphrase density is higher than overMaximum.\n\t\treturn {\n\t\t\tscore: this._config.scores.wayOverMaximum,\n\t\t\tresultText: i18n.sprintf(\n\t\t\t\t/* Translators:\n\t\t\t\t%1$s and %4$s expand to links to Yoast.com,\n\t\t\t\t%2$s expands to the anchor end tag,\n\t\t\t\t%3$d expands to the recommended maximal number of times the keyphrase should occur in the text,\n\t\t\t\t%5$d expands to the number of times the keyphrase occurred in the text. */\n\t\t\t\ti18n.dngettext(\n\t\t\t\t\t\"js-text-analysis\",\n\t\t\t\t\t\"%1$sKeyphrase density%2$s: The focus keyphrase was found %5$d time. That's way more than the \" +\n\t\t\t\t\t\"recommended maximum of %3$d times for a text of this length. %4$sDon't overoptimize%2$s!\",\n\t\t\t\t\t\"%1$sKeyphrase density%2$s: The focus keyphrase was found %5$d times. That's way more than the \" +\n\t\t\t\t\t\"recommended maximum of %3$d times for a text of this length. %4$sDon't overoptimize%2$s!\",\n\t\t\t\t\tthis._keywordCount.count\n\t\t\t\t),\n\t\t\t\tthis._config.urlTitle,\n\t\t\t\t\"</a>\",\n\t\t\t\tthis._maxRecommendedKeywordCount,\n\t\t\t\tthis._config.urlCallToAction,\n\t\t\t\tthis._keywordCount.count\n\t\t\t),\n\t\t};\n\t}\n\n\n\t/**\n\t * Marks keywords in the text for the keyword density assessment.\n\t *\n\t * @returns {Array<Mark>} Marks that should be applied.\n\t */\n\tgetMarks() {\n\t\treturn this._keywordCount.markings;\n\t}\n\n\n\t/**\n\t * Checks whether the paper has a text with at least 100 words and a keyword\n\t * is set.\n\t *\n\t * @param {Paper} paper The paper to use for the assessment.\n\t *\n\t * @returns {boolean} True if applicable.\n\t */\n\tisApplicable( paper ) {\n\t\treturn paper.hasText() && paper.hasKeyword() && countWords( paper.getText() ) >= 100;\n\t}\n}\n\nexport default KeywordDensityAssessment;\n"]}