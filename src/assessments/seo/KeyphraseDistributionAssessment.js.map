{"version":3,"sources":["../../../../src/assessments/seo/KeyphraseDistributionAssessment.js"],"names":["KeyphraseDistributionAssessment","config","defaultConfig","parameters","goodDistributionScore","acceptableDistributionScore","scores","good","okay","bad","consideration","urlTitle","urlCallToAction","identifier","_config","paper","researcher","i18n","_keyphraseDistribution","getResearch","assessmentResult","calculatedResult","calculateResult","setScore","score","setText","resultText","setHasMarks","sentencesToHighlight","length","distributionScore","keyphraseDistributionScore","sprintf","dgettext","hasText","hasKeyword","getText"],"mappings":"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","file":"KeyphraseDistributionAssessment.js","sourcesContent":["import { merge } from \"lodash-es\";\n\nimport Assessment from \"../../assessment\";\nimport { createAnchorOpeningTag } from \"../../helpers/shortlinker\";\nimport getSentences from \"../../stringProcessing/getSentences\";\nimport AssessmentResult from \"../../values/AssessmentResult\";\n\n/**\n * Returns a score based on the largest percentage of text in\n * which no keyword occurs.\n */\nclass KeyphraseDistributionAssessment extends Assessment {\n\t/**\n\t * Sets the identifier and the config.\n\t *\n\t * @param {Object} [config] The configuration to use.\n\t * @param {number} [config.parameters.goodDistributionScore]\n\t *      The average distribution score that needs to be received from the step function to get a GOOD result.\n\t * @param {number} [config.parameters.acceptableDistributionScore]\n\t *      The average distribution score that needs to be received from the step function to get an OKAY result.\n\t * @param {number} [config.scores.good]             The score to return if keyword occurrences are evenly distributed.\n\t * @param {number} [config.scores.okay]             The score to return if keyword occurrences are somewhat unevenly distributed.\n\t * @param {number} [config.scores.bad]              The score to return if there is way too much text between keyword occurrences.\n\t * @param {number} [config.scores.consideration]    The score to return if there are no keyword occurrences.\n\t * @param {string} [config.url]                     The URL to the relevant KB article.\n\t *\n\t * @returns {void}\n\t */\n\tconstructor( config = {} ) {\n\t\tsuper();\n\n\t\tconst defaultConfig = {\n\t\t\tparameters: {\n\t\t\t\tgoodDistributionScore: 30,\n\t\t\t\tacceptableDistributionScore: 50,\n\t\t\t},\n\t\t\tscores: {\n\t\t\t\tgood: 9,\n\t\t\t\tokay: 6,\n\t\t\t\tbad: 1,\n\t\t\t\tconsideration: 0,\n\t\t\t},\n\t\t\turlTitle: createAnchorOpeningTag( \"https://yoa.st/33q\" ),\n\t\t\turlCallToAction: createAnchorOpeningTag( \"https://yoa.st/33u\" ),\n\t\t};\n\n\t\tthis.identifier = \"keyphraseDistribution\";\n\t\tthis._config = merge( defaultConfig, config );\n\t}\n\n\t/**\n\t * Runs the keyphraseDistribution research and based on this returns an assessment result.\n\t *\n\t * @param {Paper}      paper      The paper to use for the assessment.\n\t * @param {Researcher} researcher The researcher used for calling research.\n\t * @param {Jed}        i18n       The object used for translations.\n\t *\n\t * @returns {AssessmentResult} The assessment result.\n\t */\n\tgetResult( paper, researcher, i18n ) {\n\t\tthis._keyphraseDistribution = researcher.getResearch( \"keyphraseDistribution\" );\n\n\t\tconst assessmentResult = new AssessmentResult();\n\n\t\tconst calculatedResult = this.calculateResult( i18n );\n\n\t\tassessmentResult.setScore( calculatedResult.score );\n\t\tassessmentResult.setText( calculatedResult.resultText );\n\t\tassessmentResult.setHasMarks( this._keyphraseDistribution.sentencesToHighlight.length > 0 );\n\n\t\treturn assessmentResult;\n\t}\n\n\t/**\n\t * Calculates the result based on the keyphraseDistribution research.\n\t *\n\t * @param {Jed} i18n The object used for translations.\n\t *\n\t * @returns {Object} Object with score and feedback text.\n\t */\n\tcalculateResult( i18n ) {\n\t\tconst distributionScore = this._keyphraseDistribution.keyphraseDistributionScore;\n\n\t\tif ( distributionScore === 100 ) {\n\t\t\treturn {\n\t\t\t\tscore: this._config.scores.consideration,\n\t\t\t\tresultText: i18n.sprintf(\n\t\t\t\t\t/* Translators: %1$s and %2$s expand to links to Yoast.com articles,\n\t\t\t\t\t%3$s expands to the anchor end tag */\n\t\t\t\t\ti18n.dgettext(\n\t\t\t\t\t\t\"js-text-analysis\",\n\t\t\t\t\t\t\"%1$sKeyphrase distribution%3$s: \" +\n\t\t\t\t\t\t\"%2$sInclude your keyphrase or its synonyms in the text so that we can check keyphrase distribution%3$s.\",\n\t\t\t\t\t),\n\t\t\t\t\tthis._config.urlTitle,\n\t\t\t\t\tthis._config.urlCallToAction,\n\t\t\t\t\t\"</a>\"\n\t\t\t\t),\n\t\t\t};\n\t\t}\n\n\t\tif ( distributionScore > this._config.parameters.acceptableDistributionScore ) {\n\t\t\treturn {\n\t\t\t\tscore: this._config.scores.bad,\n\t\t\t\tresultText: i18n.sprintf(\n\t\t\t\t\t/* Translators: %1$s and %2$s expand to links to Yoast.com articles,\n\t\t\t\t\t%3$s expands to the anchor end tag */\n\t\t\t\t\ti18n.dgettext(\n\t\t\t\t\t\t\"js-text-analysis\",\n\t\t\t\t\t\t\"%1$sKeyphrase distribution%3$s: \" +\n\t\t\t\t\t\t\"Very uneven. Large parts of your text do not contain the keyphrase or its synonyms. %2$sDistribute them more evenly%3$s.\",\n\t\t\t\t\t),\n\t\t\t\t\tthis._config.urlTitle,\n\t\t\t\t\tthis._config.urlCallToAction,\n\t\t\t\t\t\"</a>\"\n\t\t\t\t),\n\t\t\t};\n\t\t}\n\n\t\tif ( distributionScore > this._config.parameters.goodDistributionScore &&\n\t\t\tdistributionScore <= this._config.parameters.acceptableDistributionScore\n\t\t) {\n\t\t\treturn {\n\t\t\t\tscore: this._config.scores.okay,\n\t\t\t\tresultText: i18n.sprintf(\n\t\t\t\t\t/* Translators: %1$s and %2$s expand to links to Yoast.com articles,\n\t\t\t\t\t%3$s expands to the anchor end tag */\n\t\t\t\t\ti18n.dgettext(\n\t\t\t\t\t\t\"js-text-analysis\",\n\t\t\t\t\t\t\"%1$sKeyphrase distribution%3$s: \" +\n\t\t\t\t\t\t\"Uneven. Some parts of your text do not contain the keyphrase or its synonyms. %2$sDistribute them more evenly%3$s.\",\n\t\t\t\t\t),\n\t\t\t\t\tthis._config.urlTitle,\n\t\t\t\t\tthis._config.urlCallToAction,\n\t\t\t\t\t\"</a>\"\n\t\t\t\t),\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tscore: this._config.scores.good,\n\t\t\tresultText: i18n.sprintf(\n\t\t\t\t/* Translators: %1$s expands to links to Yoast.com articles, %2$s expands to the anchor end tag */\n\t\t\t\ti18n.dgettext(\n\t\t\t\t\t\"js-text-analysis\",\n\t\t\t\t\t\"%1$sKeyphrase distribution%2$s: Good job!\",\n\t\t\t\t),\n\t\t\t\tthis._config.urlTitle,\n\t\t\t\t\"</a>\"\n\t\t\t),\n\t\t};\n\t}\n\n\t/**\n\t * Creates a marker for all content words in keyphrase and synonyms.\n\t *\n\t * @returns {Array} All markers for the current text.\n\t */\n\tgetMarks() {\n\t\treturn this._keyphraseDistribution.sentencesToHighlight;\n\t}\n\n\t/**\n\t * Checks whether the paper has a text with at least 10 words and a keyword.\n\t *\n\t * @param {Paper} paper The paper to use for the assessment.\n\t *\n\t * @returns {boolean} True when there is a keyword and a text with 10 words or more.\n\t */\n\tisApplicable( paper ) {\n\t\treturn paper.hasText() && paper.hasKeyword() && getSentences( paper.getText() ).length >= 15;\n\t}\n}\n\nexport default KeyphraseDistributionAssessment;\n"]}