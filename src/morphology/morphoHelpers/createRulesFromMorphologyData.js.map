{"version":3,"sources":["../../../../src/morphology/morphoHelpers/createRulesFromMorphologyData.js"],"names":["array","map","pair","length","reg","RegExp","repl","repl1","repl2"],"mappings":";;;;;;kBAQe,UAAUA,KAAV,EAAkB;AAChC,QAAOA,MAAMC,GAAN,CAAW,UAAUC,IAAV,EAAiB;AAClC,MAAKA,KAAKC,MAAL,KAAgB,CAArB,EAAyB;AACxB,UAAO;AACNC,SAAK,IAAIC,MAAJ,CAAYH,KAAM,CAAN,CAAZ,EAAuB,GAAvB,CADC;AAENI,UAAMJ,KAAM,CAAN;AAFA,IAAP;AAIA;AACD,MAAKA,KAAKC,MAAL,KAAgB,CAArB,EAAyB;AACxB,UAAO;AACNC,SAAK,IAAIC,MAAJ,CAAYH,KAAM,CAAN,CAAZ,EAAuB,GAAvB,CADC;AAENK,WAAOL,KAAM,CAAN,CAFD;AAGNM,WAAON,KAAM,CAAN;AAHD,IAAP;AAKA;AACD,EAdM,CAAP;AAeA,C","file":"createRulesFromMorphologyData.js","sourcesContent":["/**\n * Creates an object with a regex and a replacement pair to be processed.\n *\n * @param {Array} array An array with pairs or triplets of strings of which the first one is the regex to match and\n * the second (and the third) is the replacement.\n *\n * @returns {Array} Array of objects to be used in the regex-based rules.\n */\nexport default function( array ) {\n\treturn array.map( function( pair ) {\n\t\tif ( pair.length === 2 ) {\n\t\t\treturn {\n\t\t\t\treg: new RegExp( pair[ 0 ], \"i\" ),\n\t\t\t\trepl: pair[ 1 ],\n\t\t\t};\n\t\t}\n\t\tif ( pair.length === 3 ) {\n\t\t\treturn {\n\t\t\t\treg: new RegExp( pair[ 0 ], \"i\" ),\n\t\t\t\trepl1: pair[ 1 ],\n\t\t\t\trepl2: pair[ 2 ],\n\t\t\t};\n\t\t}\n\t} );\n}\n"]}