{"version":3,"sources":["../../../src/stringProcessing/matchTextWithArray.js"],"names":["text","array","locale","count","matches","map","forEach","wordToMatch","occurrence","concat","string"],"mappings":";;;;;;kBAkBe,UAAUA,IAAV,EAAgBC,KAAhB,EAA0C;AAAA,KAAnBC,MAAmB,uEAAV,OAAU;;AACxD,KAAIC,QAAQ,CAAZ;AACA,KAAIC,UAAU,EAAd;;AAEAH,SAAQA,MAAMI,GAAN,mBAAR;;AAEA,qBAAQJ,KAAR,EAAgBK,OAAhB,CAAyB,UAAUC,WAAV,EAAwB;AAChD,MAAMC,aAAa,iCAAmBR,IAAnB,EAAyBO,WAAzB,EAAsCL,MAAtC,CAAnB;AACAC,WAASK,WAAWL,KAApB;AACAC,YAAUA,QAAQK,MAAR,CAAgBD,WAAWJ,OAA3B,CAAV;AACA,EAJD;;AAMA,KAAKA,YAAY,IAAjB,EAAwB;AACvBA,YAAU,EAAV;AACA;;AAEDA,WAAUA,QAAQC,GAAR,CAAa,UAAUK,MAAV,EAAmB;AACzC,SAAO,2BAAa,iCAAmBA,MAAnB,CAAb,CAAP;AACA,EAFS,CAAV;;AAIA,QAAO;AACNP,SAAOA,KADD;AAENC,WAASA;AAFH,EAAP;AAIA,C;;AAxCD;;;;AAEA;;;;AACA;;;;AACA;;AACA","file":"matchTextWithArray.js","sourcesContent":["/** @module stringProcessing/matchTextWithArray */\n\nimport stripSpaces from \"../stringProcessing/stripSpaces.js\";\n\nimport removePunctuation from \"../stringProcessing/removePunctuation.js\";\nimport matchTextWithWord from \"../stringProcessing/matchTextWithWord\";\nimport { normalize as normalizeQuotes } from \"../stringProcessing/quotes.js\";\nimport { uniq as unique } from \"lodash-es\";\n\n/**\n * Matches strings from an array against a given text.\n *\n * @param {String} text The text to match\n * @param {Array} array The array with strings to match\n * @param {String} [locale = \"en_EN\"] The locale of the text to get transliterations\n *\n * @returns {Array} array An array with all matches of the text.\n */\nexport default function( text, array, locale = \"en_EN\" ) {\n\tlet count = 0;\n\tlet matches = [];\n\n\tarray = array.map( normalizeQuotes );\n\n\tunique( array ).forEach( function( wordToMatch ) {\n\t\tconst occurrence = matchTextWithWord( text, wordToMatch, locale );\n\t\tcount += occurrence.count;\n\t\tmatches = matches.concat( occurrence.matches );\n\t} );\n\n\tif ( matches === null ) {\n\t\tmatches = [];\n\t}\n\n\tmatches = matches.map( function( string ) {\n\t\treturn stripSpaces( removePunctuation( string ) );\n\t} );\n\n\treturn {\n\t\tcount: count,\n\t\tmatches: matches,\n\t};\n}\n"]}