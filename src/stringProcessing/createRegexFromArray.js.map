{"version":3,"sources":["../../../src/stringProcessing/createRegexFromArray.js"],"names":["array","disableWordBoundary","regexString","_disableWordBoundary","boundedArray","string","join","RegExp"],"mappings":";;;;;;kBAae,UAAUA,KAAV,EAAiBC,mBAAjB,EAAuC;AACrD,KAAIC,WAAJ;AACA,KAAIC,uBAAuBF,uBAAuB,KAAlD;;AAEA,KAAIG,eAAe,mBAAKJ,KAAL,EAAY,UAAUK,MAAV,EAAmB;AACjD,MAAKF,oBAAL,EAA4B;AAC3B,UAAOE,MAAP;AACA;AACD,SAAO,+BAAiBA,MAAjB,EAAyB,IAAzB,CAAP;AACA,EALkB,CAAnB;;AAOAH,eAAc,MAAME,aAAaE,IAAb,CAAmB,KAAnB,CAAN,GAAmC,GAAjD;;AAEA,QAAO,IAAIC,MAAJ,CAAYL,WAAZ,EAAyB,IAAzB,CAAP;AACA,C;;AAzBD;;;;AAEA","file":"createRegexFromArray.js","sourcesContent":["/** @module stringProcessing/createRegexFromArray */\n\nimport addWordBoundary from \"../stringProcessing/addWordboundary.js\";\n\nimport { map } from \"lodash-es\";\n\n/**\n * Creates a regex of combined strings from the input array.\n *\n * @param {array} array The array with strings\n * @param {boolean} [disableWordBoundary] Boolean indicating whether or not to disable word boundaries.\n * @returns {RegExp} regex The regex created from the array.\n */\nexport default function( array, disableWordBoundary ) {\n\tvar regexString;\n\tvar _disableWordBoundary = disableWordBoundary || false;\n\n\tvar boundedArray = map( array, function( string ) {\n\t\tif ( _disableWordBoundary ) {\n\t\t\treturn string;\n\t\t}\n\t\treturn addWordBoundary( string, true );\n\t} );\n\n\tregexString = \"(\" + boundedArray.join( \")|(\" ) + \")\";\n\n\treturn new RegExp( regexString, \"ig\" );\n}\n"]}