{"version":3,"sources":["../../../src/stringProcessing/subheadingsMatch.js"],"names":["matches","keywordForms","locale","foundInHeader","i","length","formattedHeaders","removalWords","count"],"mappings":";;;;;;kBAae,UAAUA,OAAV,EAAmBC,YAAnB,EAAiCC,MAAjC,EAA0C;AACxD,KAAIC,gBAAgB,CAAC,CAArB;;AAEA,KAAKH,YAAY,IAAjB,EAAwB;AACvBG,kBAAgB,CAAhB;AACA,OAAM,IAAIC,IAAI,CAAd,EAAiBA,IAAIJ,QAAQK,MAA7B,EAAqCD,GAArC,EAA2C;AAC1C;AACA,OAAME,mBAAmB,6BACxBN,QAASI,CAAT,CADwB,EACVG,YADU,CAAzB;AAGA,OACC,kCAAoBD,gBAApB,EAAsCL,YAAtC,EAAoDC,MAApD,EAA6DM,KAA7D,GAAqE,CAArE,IACA,kCAAoBR,QAASI,CAAT,CAApB,EAAkCH,YAAlC,EAAgDC,MAAhD,EAAyDM,KAAzD,GAAiE,CAFlE,EAGE;AACDL;AACA;AACD;AACD;AACD,QAAOA,aAAP;AACA,C;;AAhCD;;;;AACA;;;;AAEA;;;;;;AADA,IAAMI,eAAe,6BAArB;;AAGA","file":"subheadingsMatch.js","sourcesContent":["import replaceString from \"../stringProcessing/replaceString.js\";\nimport removalWordsFactory from \"../config/removalWords.js\";\nconst removalWords = removalWordsFactory();\nimport matchTextWithArray from \"../stringProcessing/matchTextWithArray.js\";\n\n/**\n * Matches the keyword in an array of strings\n *\n * @param {Array} matches The array with the matched headings.\n * @param {String[]} keywordForms The array of keyword forms to match\n * @param {string} locale The locale used for transliteration.\n * @returns {number} The number of occurrences of the keyword in the headings.\n */\nexport default function( matches, keywordForms, locale ) {\n\tlet foundInHeader = -1;\n\n\tif ( matches !== null ) {\n\t\tfoundInHeader = 0;\n\t\tfor ( let i = 0; i < matches.length; i++ ) {\n\t\t\t// NOTE: This replaceString call seemingly doesn't work, as no replacement value is being sent to the .replace method in replaceString\n\t\t\tconst formattedHeaders = replaceString(\n\t\t\t\tmatches[ i ], removalWords\n\t\t\t);\n\t\t\tif (\n\t\t\t\tmatchTextWithArray( formattedHeaders, keywordForms, locale ).count > 0 ||\n\t\t\t\tmatchTextWithArray( matches[ i ], keywordForms, locale ).count > 0\n\t\t\t) {\n\t\t\t\tfoundInHeader++;\n\t\t\t}\n\t\t}\n\t}\n\treturn foundInHeader;\n}\n"]}