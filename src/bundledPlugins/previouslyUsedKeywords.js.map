{"version":3,"sources":["../../../src/bundledPlugins/previouslyUsedKeywords.js"],"names":["PreviouslyUsedKeyword","app","args","usedKeywords","searchUrl","postUrl","urlTitle","urlCallToAction","prototype","registerPlugin","registerAssessment","getResult","assess","bind","isApplicable","paper","hasKeyword","updateKeywordUsage","scoreAssessment","previouslyUsedKeywords","i18n","count","id","text","sprintf","dgettext","score","url","replace","encodeURIComponent","getKeyword","researchPreviouslyUsedKeywords","keyword","length","researcher","previouslyUsedKeywordsResult","assessmentResult","setScore","setText"],"mappings":"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","file":"previouslyUsedKeywords.js","sourcesContent":["import { isUndefined } from \"lodash-es\";\n\nimport MissingArgument from \"../errors/missingArgument\";\nimport { createAnchorOpeningTag } from \"../helpers/shortlinker\";\nimport AssessmentResult from \"../values/AssessmentResult.js\";\n\n/**\n * @param {object} app The app\n * @param {object} args An arguments object with usedKeywords, searchUrl, postUrl,\n * @param {object} args.usedKeywords An object with keywords and ids where they are used.\n * @param {string} args.searchUrl The url used to link to a search page when multiple usages of the keyword are found.\n * @param {string} args.postUrl The url used to link to a post when 1 usage of the keyword is found.\n * @constructor\n */\nvar PreviouslyUsedKeyword = function( app, args ) {\n\tif ( isUndefined( app ) ) {\n\t\tthrow new MissingArgument( \"The previously keyword plugin requires the YoastSEO app\" );\n\t}\n\n\tif ( isUndefined( args ) ) {\n\t\targs = {\n\t\t\tusedKeywords: {},\n\t\t\tsearchUrl: \"\",\n\t\t\tpostUrl: \"\",\n\t\t};\n\t}\n\n\tthis.app = app;\n\tthis.usedKeywords = args.usedKeywords;\n\tthis.searchUrl = args.searchUrl;\n\tthis.postUrl = args.postUrl;\n\tthis.urlTitle = createAnchorOpeningTag( \"https://yoa.st/33x\" );\n\tthis.urlCallToAction = createAnchorOpeningTag( \"https://yoa.st/33y\" );\n};\n\n/**\n * Registers the assessment with the assessor.\n *\n * @returns {void}\n */\nPreviouslyUsedKeyword.prototype.registerPlugin = function() {\n\tthis.app.registerAssessment( \"usedKeywords\", {\n\t\tgetResult: this.assess.bind( this ),\n\t\tisApplicable: function( paper ) {\n\t\t\treturn paper.hasKeyword();\n\t\t},\n\t}, \"previouslyUsedKeywords\" );\n};\n\n/**\n * Updates the usedKeywords.\n *\n * @param {object} usedKeywords An object with keywords and ids where they are used.\n * @returns {void}\n */\nPreviouslyUsedKeyword.prototype.updateKeywordUsage = function( usedKeywords ) {\n\tthis.usedKeywords = usedKeywords;\n};\n\n/**\n * Scores the previously used keyword assessment based on the count.\n *\n * @param {object} previouslyUsedKeywords The result of the previously used keywords research\n * @param {Paper} paper The paper object to research.\n * @param {Jed} i18n The i18n object.\n * @returns {object} the scoreobject with text and score.\n */\nPreviouslyUsedKeyword.prototype.scoreAssessment = function( previouslyUsedKeywords, paper, i18n ) {\n\tvar count = previouslyUsedKeywords.count;\n\tvar id = previouslyUsedKeywords.id;\n\tif ( count === 0 ) {\n\t\treturn {\n\t\t\ttext: i18n.sprintf(\n\t\t\t\t/* Translators:\n\t\t\t\t%1$s expands to a link to an article on yoast.com,\n\t\t\t\t%2$s expands to an anchor tag. */\n\t\t\t\ti18n.dgettext( \"js-text-analysis\", \"%1$sPreviously used keyphrase%2$s: You've not used this keyphrase before, very good.\" ),\n\t\t\t\tthis.urlTitle,\n\t\t\t\t\"</a>\"\n\t\t\t),\n\t\t\tscore: 9,\n\t\t};\n\t}\n\tif ( count === 1 ) {\n\t\tvar url = \"<a href='\" + this.postUrl.replace( \"{id}\", id ) + \"' target='_blank'>\";\n\t\treturn {\n\t\t\t/* Translators: %1$s and %2$s expand to an admin link where the keyword is already used. %3$s and %4$s\n\t\t\texpand to links on yoast.com, %4$s expands to the anchor end tag. */\n\t\t\ttext: i18n.sprintf( i18n.dgettext( \"js-text-analysis\", \"%3$sPreviously used keyphrase%5$s: \" +\n\t\t\t\t\"You've used this keyphrase %1$sonce before%2$s. \" +\n\t\t\t\t\"%4$sDo not use your keyphrase more than once%5$s.\" ),\n\t\t\turl,\n\t\t\t\"</a>\",\n\t\t\tthis.urlTitle,\n\t\t\tthis.urlCallToAction,\n\t\t\t\"</a>\"\n\t\t\t),\n\t\t\tscore: 6,\n\t\t};\n\t}\n\tif ( count > 1 ) {\n\t\turl = \"<a href='\" + this.searchUrl.replace( \"{keyword}\", encodeURIComponent( paper.getKeyword() ) ) + \"' target='_blank'>\";\n\t\treturn {\n\t\t\t/* Translators: %1$s and $3$s expand to the admin search page for the keyword, %2$d expands to the number\n\t\t\tof times this keyword has been used before, %4$s and %5$s expand to links to yoast.com, %6$s expands to\n\t\t\tthe anchor end tag */\n\t\t\ttext: i18n.sprintf( i18n.dgettext( \"js-text-analysis\", \"%4$sPreviously used keyphrase%6$s: \" +\n\t\t\t\t\"You've used this keyphrase %1$s%2$d times before%3$s. \" +\n\t\t\t\t\"%5$sDo not use your keyphrase more than once%6$s.\" ),\n\t\t\turl,\n\t\t\tcount,\n\t\t\t\"</a>\",\n\t\t\tthis.urlTitle,\n\t\t\tthis.urlCallToAction,\n\t\t\t\"</a>\"\n\t\t\t),\n\t\t\tscore: 1,\n\t\t};\n\t}\n};\n\n/**\n * Researches the previously used keywords, based on the used keywords and the keyword in the paper.\n *\n * @param {Paper} paper The paper object to research.\n * @returns {{id: number, count: number}} The object with the count and the id of the previously used keyword\n */\nPreviouslyUsedKeyword.prototype.researchPreviouslyUsedKeywords = function( paper ) {\n\tvar keyword = paper.getKeyword();\n\tvar count = 0;\n\tvar id = 0;\n\n\tif ( ! isUndefined( this.usedKeywords[ keyword ] ) ) {\n\t\tcount = this.usedKeywords[ keyword ].length;\n\t\tid = this.usedKeywords[ keyword ][ 0 ];\n\t}\n\n\treturn {\n\t\tid: id,\n\t\tcount: count,\n\t};\n};\n\n/**\n * The assessment for the previously used keywords.\n *\n * @param {Paper} paper The Paper object to assess.\n * @param {Researcher} researcher The Researcher object containing all available researches.\n * @param {object} i18n The locale object.\n * @returns {AssessmentResult} The assessment result of the assessment\n */\nPreviouslyUsedKeyword.prototype.assess = function( paper, researcher, i18n ) {\n\tvar previouslyUsedKeywords = this.researchPreviouslyUsedKeywords( paper );\n\tvar previouslyUsedKeywordsResult = this.scoreAssessment( previouslyUsedKeywords, paper, i18n );\n\n\tvar assessmentResult =  new AssessmentResult();\n\tassessmentResult.setScore( previouslyUsedKeywordsResult.score );\n\tassessmentResult.setText( previouslyUsedKeywordsResult.text );\n\n\treturn assessmentResult;\n};\n\nexport default PreviouslyUsedKeyword;\n"]}