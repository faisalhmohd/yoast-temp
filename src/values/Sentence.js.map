{"version":3,"sources":["../../../src/values/Sentence.js"],"names":["defaultAttributes","locale","Sentence","sentence","_sentenceText","_locale","_isPassive","prototype","getSentenceText","getLocale","isPassive","setPassive","passive","serialize","_parseClass","sentenceText","parse","serialized"],"mappings":";;;;;AAAA;;;;AAIA,IAAIA,oBAAoB;AACvBC,UAAQ;AADe,CAAxB;;AAIA;;;;;;;AAOA,IAAIC,WAAW,SAAXA,QAAW,CAAUC,QAAV,EAAoBF,MAApB,EAA6B;AAC3C,OAAKG,aAAL,GAAqBD,YAAY,EAAjC;AACA,OAAKE,OAAL,GAAeJ,UAAUD,kBAAkBC,MAA3C;AACA,OAAKK,UAAL,GAAkB,KAAlB;AACA,CAJD;;AAMA;;;;AAIAJ,SAASK,SAAT,CAAmBC,eAAnB,GAAqC,YAAW;AAC/C,SAAO,KAAKJ,aAAZ;AACA,CAFD;;AAIA;;;;AAIAF,SAASK,SAAT,CAAmBE,SAAnB,GAA+B,YAAW;AACzC,SAAO,KAAKJ,OAAZ;AACA,CAFD;;AAIA;;;;;AAKAH,SAASK,SAAT,CAAmBG,SAAnB,GAA+B,YAAW;AACzC,SAAO,KAAKJ,UAAZ;AACA,CAFD;;AAIA;;;;;;AAMAJ,SAASK,SAAT,CAAmBI,UAAnB,GAAgC,UAAUC,OAAV,EAAoB;AACnD,OAAKN,UAAL,GAAkBM,OAAlB;AACA,CAFD;;AAIA;;;;;AAKAV,SAASK,SAAT,CAAmBM,SAAnB,GAA+B,YAAW;AACzC,SAAO;AACNC,iBAAa,UADP;AAENC,kBAAc,KAAKX,aAFb;AAGNH,YAAQ,KAAKI,OAHP;AAINK,eAAW,KAAKJ;AAJV,GAAP;AAMA,CAPD;;AASA;;;;;;;AAOAJ,SAASc,KAAT,GAAiB,UAAUC,UAAV,EAAuB;AACvC,MAAMd,WAAW,IAAID,QAAJ,CAAce,WAAWF,YAAzB,EAAuCE,WAAWhB,MAAlD,CAAjB;AACAE,WAASQ,UAAT,CAAqBM,WAAWP,SAAhC;;AAEA,SAAOP,QAAP;AACA,CALD;;kBAOeD,Q","file":"Sentence.js","sourcesContent":["/**\n * Default attributes to be used by the Sentence if they are left undefined.\n * @type {{locale: string}}\n */\nvar defaultAttributes = {\n\tlocale: \"en_US\",\n};\n\n/**\n * Construct the Sentence object and set the sentence text and locale.\n *\n * @param {string} sentence The text of the sentence.\n * @param {string} locale The locale.\n * @constructor\n */\nvar Sentence = function( sentence, locale ) {\n\tthis._sentenceText = sentence || \"\";\n\tthis._locale = locale || defaultAttributes.locale;\n\tthis._isPassive = false;\n};\n\n/**\n * Returns the sentence text.\n * @returns {String} The sentence.\n */\nSentence.prototype.getSentenceText = function() {\n\treturn this._sentenceText;\n};\n\n/**\n * Returns the locale.\n * @returns {String} The locale.\n */\nSentence.prototype.getLocale = function() {\n\treturn this._locale;\n};\n\n/**\n * Returns the passiveness of a sentence.\n *\n * @returns {boolean} True if passive, otherwise returns false.\n */\nSentence.prototype.isPassive = function() {\n\treturn this._isPassive;\n};\n\n/**\n * Sets the passiveness of the sentence.\n *\n * @param {boolean} passive Whether the sentence is passive or not.\n * @returns {void}\n */\nSentence.prototype.setPassive = function( passive ) {\n\tthis._isPassive = passive;\n};\n\n/**\n * Serializes the Sentence instance to an object.\n *\n * @returns {Object} The serialized Participle.\n */\nSentence.prototype.serialize = function() {\n\treturn {\n\t\t_parseClass: \"Sentence\",\n\t\tsentenceText: this._sentenceText,\n\t\tlocale: this._locale,\n\t\tisPassive: this._isPassive,\n\t};\n};\n\n/**\n * Parses the object to a Sentence.\n *\n * @param {Object} serialized The serialized object.\n *\n * @returns {Sentence} The parsed Sentence.\n */\nSentence.parse = function( serialized ) {\n\tconst sentence = new Sentence( serialized.sentenceText, serialized.locale );\n\tsentence.setPassive( serialized.isPassive );\n\n\treturn sentence;\n};\n\nexport default Sentence;\n"]}